-- 실습. 수강신청 데이터베이스
-- 테이블 삭제
DROP TABLE LECTURE_TBL;
DROP TABLE ENROLL_TBL;
DROP TABLE STUDENT_TBL;
DROP TABLE COURSE_TBL;
DROP TABLE PROFESSOR_TBL;


-- 테이블 생성
-- 1. 교수 테이블(PROFESSOR_TBL) 생성
CREATE TABLE PROFESSOR_TBL(
    P_NO        VARCHAR2(5 BYTE)   NOT NULL,
    P_NAME      VARCHAR2(30 BYTE)  NULL,
    P_MAJOR     VARCHAR2(30 BYTE)  NULL,
    CONSTRAINT PK_PROFESSOR PRIMARY KEY(P_NO)
);

-- 2. 과목 테이블(COURSE_TBL) 생성
CREATE TABLE COURSE_TBL(
    C_NO VARCHAR2(5 BYTE)       NOT NULL,
    C_NAME VARCHAR2(30 BYTE)    NULL,
    C_UNIT NUMBER(1)            NULL,
    CONSTRAINT PK_COURSE PRIMARY KEY(C_NO)
);

-- 3. 학생 테이블(STUDENT_TBL) 생성
CREATE TABLE STUDENT_TBL(
    S_NO        VARCHAR2(5 BYTE)      NOT NULL,
    S_NAME      VARCHAR2(100 BYTE)    NULL,
    S_ADDRESS   VARCHAR2(100 BYTE)    NULL,
    S_GRADE_NO  NUMBER(1)             NULL,
    P_NO        VARCHAR2(5 BYTE)      NOT NULL,
    CONSTRAINT PK_STUDENT PRIMARY KEY(S_NO),
    CONSTRAINT FK_PROF_STD FOREIGN KEY(P_NO) REFERENCES PROFESSOR_TBL(P_NO) ON DELETE CASCADE
);



-- 4. 수강신청 테이블(ENROLL_TBL) 생성
CREATE TABLE ENROLL_TBL(
    E_NO        NUMBER           NOT NULL,
    S_NO        VARCHAR2(5 BYTE) NOT NULL,
    C_NO        VARCHAR2(5 BYTE) NOT NULL,
    E_DATE      DATE             NULL,
    CONSTRAINT PK_ENROLL PRIMARY KEY(E_NO),
    CONSTRAINT FK_STUDENT_ENROLL FOREIGN KEY(S_NO) REFERENCES STUDENT_TBL(S_NO) ON DELETE CASCADE,
    CONSTRAINT FK_COURSE_ENROLL FOREIGN KEY(C_NO) REFERENCES COURSE_TBL(C_NO) ON DELETE CASCADE
);

-- 5. 강의 테이블(LECTURE_TBL) 생성
CREATE TABLE LECTURE_TBL(
    L_NO         NUMBER              NOT NULL,
    P_NO         VARCHAR2(5 BYTE)    NULL,
    E_NO         NUMBER              NULL,
    L_NAME       VARCHAR2(100 BYTE)  NULL,
    L_LOCATION   VARCHAR2(100 BYTE)  NULL,
    CONSTRAINT PK_LECTURE PRIMARY KEY(L_NO),
    CONSTRAINT FK_PROFESSOR_LECTURE FOREIGN KEY(P_NO) REFERENCES PROFESSOR_TBL(P_NO) ON DELETE SET NULL,
    CONSTRAINT FK_ENROLL_LECTURE FOREIGN KEY(E_NO) REFERENCES ENROLL_TBL(E_NO) ON DELETE SET NULL
);


-- 데이터 삽입

-- 1. 교수 테이블(PROFESSOR_TBL) 데이터 입력
INSERT INTO PROFESSOR_TBL(P_NO, P_NAME, P_MAJOR) VALUES('P0001', "민", "컴");
INSERT INTO PROFESSOR_TBL(P_NO, P_NAME, P_MAJOR) VALUES('P0002', "경", "공");
INSERT INTO PROFESSOR_TBL(P_NO, P_NAME, P_MAJOR) VALUES('P0003', "태", "학");

-- 2. 과목 테이블(COURSE_TBL) 데이터 입력
INSERT INTO COURSE_TBL(C_NO, C_NAME, C_UNIT) VALUES('CE001', '자바', 3);
INSERT INTO COURSE_TBL(C_NO, C_NAME, C_UNIT) VALUES('CE002', '데이터베이스', 3);
INSERT INTO COURSE_TBL(C_NO, C_NAME, C_UNIT) VALUES('CE003', '서버프로그램', 3);

-- 3. 학생 테이블(STUDENT_TBL) 데이터 입력
INSERT INTO STUDENT_TBL(S_NO, S_NAME, S_ADDRESS, S_GRADE_NO, P_NO) VALUES ('21001', '고길동', '서울', 3, 'P0001');
INSERT INTO STUDENT_TBL(S_NO, S_NAME, S_ADDRESS, S_GRADE_NO, P_NO) VALUES ('21002', '최무배', '경기', 3, 'P0002');
INSERT INTO STUDENT_TBL(S_NO, S_NAME, S_ADDRESS, S_GRADE_NO, P_NO) VALUES ('22001', '강우림', '인천', 2, 'P0003');
INSERT INTO STUDENT_TBL(S_NO, S_NAME, S_ADDRESS, S_GRADE_NO, P_NO) VALUES ('22002', '지수아', '제주', 2, 'P0001');
INSERT INTO STUDENT_TBL(S_NO, S_NAME, S_ADDRESS, S_GRADE_NO, P_NO) VALUES ('23001', '김예림', '대구', 1, 'P0002');
INSERT INTO STUDENT_TBL(S_NO, S_NAME, S_ADDRESS, S_GRADE_NO, P_NO) VALUES ('23002', '나태진', '광주', 1, 'P0003');


-- 4. 수강신청번호를 생성하는 시퀀스
DROP SEQUENCE ENROLL_SEQ;
CREATE SEQUENCE ENROLL_SEQ ORDER;
-- 수강신청 테이블(ENROLL_TBL) 데이터 입력
INSERT INTO ENROLL_TBL(E_NO, S_NO, C_NO, E_DATE) VALUES (ENROLL_SEQ.NEXTVAL, '21001', 'CE001', '23-02-25');
INSERT INTO ENROLL_TBL(E_NO, S_NO, C_NO, E_DATE) VALUES (ENROLL_SEQ.NEXTVAL, '21001', 'CE002', '23-02-25');
INSERT INTO ENROLL_TBL(E_NO, S_NO, C_NO, E_DATE) VALUES (ENROLL_SEQ.NEXTVAL, '21001', 'CE003', '23-02-25');

-- 5. 강의번호를 생성하는 시퀀스
DROP SEQUENCE LEC_SEQ;
CREATE SEQUENCE LEC_SEQ ORDER;
-- 강의 테이블(LECTURE_TBL) 데이터 입력
INSERT INTO LECTURE_TBL(L_NO, P_NO, E_NO, L_NAME, L_LOCATION) VALUES (LEC_SEQ.NEXTVAL, 'P0001', 1, '자바완전정복', '101호');
INSERT INTO LECTURE_TBL(L_NO, P_NO, E_NO, L_NAME, L_LOCATION) VALUES (LEC_SEQ.NEXTVAL, 'P0002', 2, '관계형데이터베이스이론', '102호');
INSERT INTO LECTURE_TBL(L_NO, P_NO, E_NO, L_NAME, L_LOCATION) VALUES (LEC_SEQ.NEXTVAL, 'P0003', 3, '스프링프레임워크개요', '103호');


-- 6. 변경된 내용을 DB에 반영
COMMIT;